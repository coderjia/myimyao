version: '3.8'

services:
  # Laravel 应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
      args:
        - BUILDPLATFORM=${BUILDPLATFORM:-linux/amd64}
        - TARGETPLATFORM=${TARGETPLATFORM:-linux/amd64}
    image: myimyao-app:latest
    container_name: myimyao-app
    restart: unless-stopped
    working_dir: /var/www/myimyao
    volumes:
      # 开发模式：挂载源代码（可选）
      - .:/var/www/myimyao:cached
      # 持久化存储目录
      - storage_data:/var/www/myimyao/storage
      - bootstrap_cache:/var/www/myimyao/bootstrap/cache
    ports:
      - "${APP_PORT:-8000}:8000"
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=${DB_HOST:-host.docker.internal}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-myimyao}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD}
      - CACHE_DRIVER=${CACHE_DRIVER:-file}
      - SESSION_DRIVER=${SESSION_DRIVER:-file}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-sync}
    networks:
      - myimyao-network
    depends_on:
      - mysql
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    platform: ${MYSQL_PLATFORM:-linux/amd64}
    container_name: myimyao-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_DATABASE=${DB_DATABASE:-myimyao}
      - MYSQL_USER=${DB_USERNAME:-myimyao}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    ports:
      - "${DB_PORT:-3306}:3306"
    networks:
      - myimyao-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    platform: ${REDIS_PLATFORM:-linux/amd64}
    container_name: myimyao-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - myimyao-network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理（可选）
  nginx:
    image: nginx:alpine
    platform: ${NGINX_PLATFORM:-linux/amd64}
    container_name: myimyao-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./public:/var/www/myimyao/public:ro
      - nginx_logs:/var/log/nginx
    networks:
      - myimyao-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 队列工作进程（可选）
  queue:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    image: myimyao-app:latest
    container_name: myimyao-queue
    restart: unless-stopped
    working_dir: /var/www/myimyao
    volumes:
      - .:/var/www/myimyao:cached
      - storage_data:/var/www/myimyao/storage
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-myimyao}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - myimyao-network
    depends_on:
      - mysql
      - redis
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    profiles:
      - queue

  # 任务调度器（可选）
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    image: myimyao-app:latest
    container_name: myimyao-scheduler
    restart: unless-stopped
    working_dir: /var/www/myimyao
    volumes:
      - .:/var/www/myimyao:cached
      - storage_data:/var/www/myimyao/storage
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-myimyao}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - myimyao-network
    depends_on:
      - mysql
      - redis
    command: >
      sh -c "while true; do
        php artisan schedule:run --verbose --no-interaction
        sleep 60
      done"
    profiles:
      - scheduler

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  storage_data:
    driver: local
  bootstrap_cache:
    driver: local
  nginx_logs:
    driver: local

networks:
  myimyao-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16